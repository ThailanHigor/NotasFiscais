@model ProvaFabio.Models.CorpoNFE

@{
    ViewBag.Title = "Create";
}

<h2>Adicionar Produto</h2>




@using (Html.BeginForm("Create", "CorpoNFE"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Nota Fiscal: @ViewBag.Nota.NumNF</h4>
       <div>
           <a href="/CabecalhoNFE" class="btn btn-info">Voltar</a>
        </div>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NumNFE, "Nota Fiscal", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" value="@ViewBag.Nota.NumNF" disabled class="form-control" />
                <input type="hidden" name="NumNFE" value="@ViewBag.Nota.NumNF" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_prod, "Produto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Id_prod", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_prod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control", @Type = "number", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CustoUnit, "Custo Unitário", htmlAttributes: new { @class = "control-label col-md-2", @required = "required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustoUnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustoUnit, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.IPI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IPI, new { htmlAttributes = new { @class = "form-control", @Type = "number", @required = "required" } })
                @Html.ValidationMessageFor(model => model.IPI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ICMS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ICMS, new { htmlAttributes = new { @class = "form-control", @Type = "number", @required = "required" } })
                @Html.ValidationMessageFor(model => model.ICMS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISS, new { htmlAttributes = new { @class = "form-control", @Type = "number", @required = "required" } })
                @Html.ValidationMessageFor(model => model.ISS, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-success" style="width:100%" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
